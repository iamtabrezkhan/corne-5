/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <1 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q  &kp W               &kp E               &kp R             &kp T        &kp Y    &kp U              &kp I                &kp O                &kp P     &trans
&trans  &kp A  &mt LEFT_COMMAND S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G        &kp H    &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_COMMAND L  &kp SEMI  &trans
&trans  &kp Z  &kp X               &kp C               &kp V             &kp B        &kp N    &kp M              &kp COMMA            &kp DOT              &kp FSLH  &trans
                                   &kp LGUI            &mo 1             &kp SPACE    &kp RET  &mo 2              &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1        &kp N2               &kp N3                 &kp N4                 &kp N5         &kp N6          &kp N7                &kp N8              &kp N9                              &kp N0                 &trans
&trans  &kp EXCL      &mt LEFT_COMMAND AT  &mt LEFT_CONTROL HASH  &mt LEFT_SHIFT DOLLAR  &kp PERCENT    &kp CARET       &mt RIGHT_SHIFT AMPS  &mt RCTRL ASTERISK  &mt RIGHT_COMMAND LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1         &bt BT_SEL 2           &bt BT_SEL 3           &bt BT_CLR     &kp LEFT_ARROW  &kp DOWN_ARROW        &kp UP_ARROW        &kp RIGHT_ARROW                     &kp GRAVE              &trans
                                           &kp LGUI               &trans                 &kp SPACE      &kp RET         &trans                &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &trans
                          &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
